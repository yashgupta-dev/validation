<?php

/**
 * This file has been @generated by a dev-corner.
 * See [README.md](README.md#generating-data) for more information.
 *
 * Pull requests changing data in these files will not be accepted. See the
 * [FAQ in the README](README.md#problems-with-invalid-numbers] on how to make
 * metadata changes.
 *
 * You can modify this file via passing your DB object
 */

namespace CodeCorner\Validation\config;

use PDO;
use mysqli;
use Exception;

/**
 * configuration class for validation
 */
class config
{

    public static $defaultConfiguration = [
        'DEFAULT_PHONE_CODE' => 'IN'

    ];

    /**
     * SQLQueries
     *
     * @param  mixed $query
     * @param  mixed $type
     * @return bool
     */
    public static function SQLQueries($DB, $query, $type)
    {
        $valid = true;
        switch ($type) {
            case 'unique':
                $valid = !self::runDBQuery($DB, $query);
                break;

            case 'not_in':
                $valid = !self::runDBQuery($DB, $query);
                break;

            case 'in':
                $valid = self::runDBQuery($DB, $query);
                break;

            case 'assign':
                $valid = self::runDBQuery($DB, $query);
                break;

            default:

                break;
        }

        return $valid;
    }

    /**
     * runDBQuery
     *
     * @param  mixed $DB
     * @param  mixed $query
     * @return bool|integer|string
     */
    protected static function runDBQuery($DB, $query)
    {
        try {
            if ($DB instanceof PDO) {
                $response = $DB->query($query)->fetchAll(PDO::FETCH_ASSOC);
            } elseif ($DB instanceof mysqli) {
                $response = $DB->query($query)->fetch_assoc();
            }
            
            if(!empty($response['count'])) {
                return $response['count'];
            } else {
                return $response[0]['count'];
            }

        } catch (\Exception $e) {
            // error_log($e->getMessage());
            return false;
        }
    }
    /**
     * get
     *
     * @param  mixed $key
     * @return mixed
     */
    public static function get($key)
    {
        if (isset(self::$defaultConfiguration[$key])) {
            return self::$defaultConfiguration[$key];
        } else {
            throw new Exception('Call to undefined configuation ' . $key);
        }
    }
}
